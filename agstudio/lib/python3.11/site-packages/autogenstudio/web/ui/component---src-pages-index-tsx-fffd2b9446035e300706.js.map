{"version":3,"file":"component---src-pages-index-tsx-fffd2b9446035e300706.js","mappings":"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","sources":["webpack://AutoGen_Studio/./node_modules/@heroicons/react/24/outline/esm/ChevronRightIcon.js","webpack://AutoGen_Studio/./node_modules/@heroicons/react/24/outline/esm/GlobeAltIcon.js","webpack://AutoGen_Studio/./node_modules/@heroicons/react/24/outline/esm/PencilIcon.js","webpack://AutoGen_Studio/./node_modules/@heroicons/react/24/outline/esm/CheckIcon.js","webpack://AutoGen_Studio/./node_modules/@heroicons/react/24/outline/esm/ChatBubbleLeftRightIcon.js","webpack://AutoGen_Studio/./src/components/views/playground/workflows.tsx","webpack://AutoGen_Studio/./src/components/views/playground/sessions.tsx","webpack://AutoGen_Studio/./src/components/views/playground/sidebar.tsx","webpack://AutoGen_Studio/./src/components/views/playground/ra.tsx","webpack://AutoGen_Studio/./src/pages/index.tsx","webpack://AutoGen_Studio/./node_modules/@heroicons/react/24/outline/esm/Square3Stack3DIcon.js","webpack://AutoGen_Studio/./node_modules/@heroicons/react/24/outline/esm/TrashIcon.js"],"sourcesContent":["import * as React from \"react\";\nfunction ChevronRightIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m8.25 4.5 7.5 7.5-7.5 7.5\"\n  }));\n}\nconst ForwardRef = React.forwardRef(ChevronRightIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction GlobeAltIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 21a9.004 9.004 0 0 0 8.716-6.747M12 21a9.004 9.004 0 0 1-8.716-6.747M12 21c2.485 0 4.5-4.03 4.5-9S14.485 3 12 3m0 18c-2.485 0-4.5-4.03-4.5-9S9.515 3 12 3m0 0a8.997 8.997 0 0 1 7.843 4.582M12 3a8.997 8.997 0 0 0-7.843 4.582m15.686 0A11.953 11.953 0 0 1 12 10.5c-2.998 0-5.74-1.1-7.843-2.918m15.686 0A8.959 8.959 0 0 1 21 12c0 .778-.099 1.533-.284 2.253m0 0A17.919 17.919 0 0 1 12 16.5c-3.162 0-6.133-.815-8.716-2.247m0 0A9.015 9.015 0 0 1 3 12c0-1.605.42-3.113 1.157-4.418\"\n  }));\n}\nconst ForwardRef = React.forwardRef(GlobeAltIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction PencilIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L6.832 19.82a4.5 4.5 0 0 1-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 0 1 1.13-1.897L16.863 4.487Zm0 0L19.5 7.125\"\n  }));\n}\nconst ForwardRef = React.forwardRef(PencilIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction CheckIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m4.5 12.75 6 6 9-13.5\"\n  }));\n}\nconst ForwardRef = React.forwardRef(CheckIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ChatBubbleLeftRightIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M20.25 8.511c.884.284 1.5 1.128 1.5 2.097v4.286c0 1.136-.847 2.1-1.98 2.193-.34.027-.68.052-1.02.072v3.091l-3-3c-1.354 0-2.694-.055-4.02-.163a2.115 2.115 0 0 1-.825-.242m9.345-8.334a2.126 2.126 0 0 0-.476-.095 48.64 48.64 0 0 0-8.048 0c-1.131.094-1.976 1.057-1.976 2.192v4.286c0 .837.46 1.58 1.155 1.951m9.345-8.334V6.637c0-1.621-1.152-3.026-2.76-3.235A48.455 48.455 0 0 0 11.25 3c-2.115 0-4.198.137-6.24.402-1.608.209-2.76 1.614-2.76 3.235v6.226c0 1.621 1.152 3.026 2.76 3.235.577.075 1.157.14 1.74.194V21l4.155-4.155\"\n  }));\n}\nconst ForwardRef = React.forwardRef(ChatBubbleLeftRightIcon);\nexport default ForwardRef;","import { Select, message } from \"antd\";\nimport * as React from \"react\";\nimport { LoadingOverlay } from \"../../atoms\";\nimport { IFlowConfig, IStatus } from \"../../types\";\nimport { useConfigStore } from \"../../../hooks/store\";\nimport { fetchJSON, getServerUrl } from \"../../utils\";\nimport { appContext } from \"../../../hooks/provider\";\nimport { Link } from \"gatsby\";\nimport { Square2StackIcon } from \"@heroicons/react/24/outline\";\n\nconst AgentsWorkflowView = () => {\n  const [error, setError] = React.useState<IStatus | null>({\n    status: true,\n    message: \"All good\",\n  });\n\n  const [loading, setLoading] = React.useState(false);\n  const workflowConfig = useConfigStore((state) => state.workflowConfig);\n  const setWorkflowConfig = useConfigStore((state) => state.setWorkflowConfig);\n\n  const { user } = React.useContext(appContext);\n  const serverUrl = getServerUrl();\n  const listWorkflowsUrl = `${serverUrl}/workflows?user_id=${user?.email}`;\n\n  const [workflowConfigs, setWorkflowConfigs] = React.useState<IFlowConfig[]>(\n    []\n  );\n\n  const [selectedConfig, setSelectedConfig] = React.useState<number>(0);\n\n  const fetchWorkFlow = () => {\n    setError(null);\n    setLoading(true);\n    // const fetch;\n    const payLoad = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const onSuccess = (data: any) => {\n      if (data && data.status) {\n        // message.success(data.message);\n\n        setWorkflowConfigs(data.data);\n        if (data.data.length > 0) {\n          setWorkflowConfig(data.data[0]);\n        }\n      } else {\n        message.error(data.message);\n      }\n      setLoading(false);\n    };\n    const onError = (err: any) => {\n      setError(err);\n      message.error(err.message);\n      setLoading(false);\n    };\n    fetchJSON(listWorkflowsUrl, payLoad, onSuccess, onError);\n  };\n\n  React.useEffect(() => {\n    if (user) {\n      // console.log(\"fetching messages\", messages);\n      fetchWorkFlow();\n    }\n  }, []);\n\n  return (\n    <div className=\" mb-4 relative\">\n      {/* <div className=\"font-semibold pb-2 border-b\">\n        <Square2StackIcon className=\"h-5 w-5 inline-block mr-1\" />\n        Agents Workflow{\" \"}\n      </div> */}\n      <div className=\"text-sm mt-2 mb-2 pb-1  \">\n        {\" \"}\n        Please select an agent workflow to begin.{\" \"}\n      </div>\n\n      <div className=\"relative mt-2 \">\n        <LoadingOverlay loading={loading} />\n\n        {workflowConfigs && workflowConfigs.length > 0 && (\n          <Select\n            className=\"w-full\"\n            value={workflowConfigs[selectedConfig].name}\n            onChange={(value: any) => {\n              setSelectedConfig(value);\n              setWorkflowConfig(workflowConfigs[value]);\n            }}\n            options={\n              workflowConfigs.map((config, index) => {\n                return { label: config.name, value: index };\n              }) as any\n            }\n          />\n        )}\n        <div className=\"mt-2 text-xs\">\n          {\" \"}\n          View all workflows{\" \"}\n          <span className=\"text-accent\">\n            {\" \"}\n            <Link to=\"/build\">here</Link>\n          </span>{\" \"}\n        </div>\n      </div>\n      {!workflowConfigs ||\n        (workflowConfigs && workflowConfigs.length === 0 && (\n          <div className=\"p-1 border rounded text-xs px-2 text-secondary\">\n            {\" \"}\n            No agent workflows found.\n          </div>\n        ))}\n    </div>\n  );\n};\nexport default AgentsWorkflowView;\n","import {\n  ChatBubbleLeftRightIcon,\n  CheckIcon,\n  GlobeAltIcon,\n  PencilIcon,\n  PlusIcon,\n  Square3Stack3DIcon,\n  TrashIcon,\n} from \"@heroicons/react/24/outline\";\nimport { Button, Dropdown, MenuProps, Modal, message } from \"antd\";\nimport * as React from \"react\";\nimport { IChatSession, IStatus } from \"../../types\";\nimport { appContext } from \"../../../hooks/provider\";\nimport { fetchJSON, getServerUrl, timeAgo, truncateText } from \"../../utils\";\nimport { LaunchButton, LoadingOverlay } from \"../../atoms\";\nimport { useConfigStore } from \"../../../hooks/store\";\nimport AgentsWorkflowView from \"./workflows\";\nimport { text } from \"stream/consumers\";\n\nconst SessionsView = ({}: any) => {\n  const [loading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState<IStatus | null>({\n    status: true,\n    message: \"All good\",\n  });\n\n  const { user } = React.useContext(appContext);\n  const serverUrl = getServerUrl();\n  const listSessionUrl = `${serverUrl}/sessions?user_id=${user?.email}`;\n  const createSessionUrl = `${serverUrl}/sessions`;\n  const renameSessionUrl = `${serverUrl}/sessions/rename?name=`;\n  const publishSessionUrl = `${serverUrl}/sessions/publish`;\n  const deleteSessionUrl = `${serverUrl}/sessions/delete`;\n\n  const sessions = useConfigStore((state) => state.sessions);\n  const workflowConfig = useConfigStore((state) => state.workflowConfig);\n  const setSessions = useConfigStore((state) => state.setSessions);\n  // const [session, setSession] =\n  //   React.useState<IChatSession | null>(null);\n  const session = useConfigStore((state) => state.session);\n  const setSession = useConfigStore((state) => state.setSession);\n  const setWorkflowConfig = useConfigStore((state) => state.setWorkflowConfig);\n  const deleteSession = (session: IChatSession) => {\n    setError(null);\n    setLoading(true);\n    // const fetch;\n    const payLoad = {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        user_id: user?.email,\n        session: session,\n      }),\n    };\n\n    const onSuccess = (data: any) => {\n      if (data && data.status) {\n        message.success(data.message);\n        setSessions(data.data);\n        if (data.data && data.data.length > 0) {\n          setSession(data.data[0]);\n        }\n      } else {\n        message.error(data.message);\n      }\n      setLoading(false);\n    };\n    const onError = (err: any) => {\n      setError(err);\n      message.error(err.message);\n      setLoading(false);\n    };\n    fetchJSON(deleteSessionUrl, payLoad, onSuccess, onError);\n  };\n\n  const [newSessionModalVisible, setNewSessionModalVisible] =\n    React.useState(false);\n\n  const fetchSessions = () => {\n    setError(null);\n    setLoading(true);\n    // const fetch;\n    const payLoad = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const onSuccess = (data: any) => {\n      if (data && data.status) {\n        // message.success(data.message);\n        // console.log(\"sessions\", data);\n        setSessions(data.data);\n      } else {\n        message.error(data.message);\n      }\n      setLoading(false);\n    };\n    const onError = (err: any) => {\n      setError(err);\n      message.error(err.message);\n      setLoading(false);\n    };\n    fetchJSON(listSessionUrl, payLoad, onSuccess, onError);\n  };\n\n  const publishSession = () => {\n    setError(null);\n    setLoading(true);\n\n    const body = {\n      user_id: user?.email,\n      session: session,\n      tags: [\"published\"],\n    };\n    // const fetch;\n    const payLoad = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(body),\n    };\n\n    const onSuccess = (data: any) => {\n      if (data && data.status) {\n        message.success(data.message);\n        // setSessions(data.data);\n      } else {\n        message.error(data.message);\n      }\n      setLoading(false);\n    };\n    const onError = (err: any) => {\n      setError(err);\n      message.error(err.message);\n      setLoading(false);\n    };\n    fetchJSON(publishSessionUrl, payLoad, onSuccess, onError);\n  };\n\n  React.useEffect(() => {\n    if (sessions && sessions.length > 0) {\n      const firstSession = sessions[0];\n      setSession(firstSession);\n      setWorkflowConfig(firstSession?.flow_config);\n    } else {\n      setSession(null);\n    }\n  }, [sessions]);\n\n  const createSession = () => {\n    setError(null);\n    setLoading(true);\n\n    const body = {\n      user_id: user?.email,\n      session: {\n        user_id: user?.email,\n        flow_config: workflowConfig,\n        session_id: null,\n      },\n    };\n    // const fetch;\n    const payLoad = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(body),\n    };\n\n    console.log(\"createSession\", payLoad);\n\n    const onSuccess = (data: any) => {\n      if (data && data.status) {\n        message.success(data.message);\n        setSessions(data.data);\n        setWorkflowConfig(data.data[0]?.workflow_config);\n      } else {\n        message.error(data.message);\n      }\n      setLoading(false);\n    };\n    const onError = (err: any) => {\n      setError(err);\n      message.error(err.message);\n      setLoading(false);\n    };\n    fetchJSON(createSessionUrl, payLoad, onSuccess, onError);\n  };\n\n  const renameSession = (session: IChatSession, name: string) => {\n    setError(null);\n    setLoading(true);\n\n    const body = {\n      user_id: user?.email,\n      session: session,\n    };\n    // const fetch;\n    const payLoad = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(body),\n    };\n\n    console.log(\"renameSession to \" + name, payLoad);\n\n    const onSuccess = (data: any) => {\n      if (data && data.status) {\n        message.success(data.message);\n        setSessions(data.data);\n        setWorkflowConfig(data.data[0]?.workflow_config);\n      } else {\n        message.error(data.message);\n      }\n      setLoading(false);\n    };\n    const onError = (err: any) => {\n      setError(err);\n      message.error(err.message);\n      setLoading(false);\n    };\n    fetchJSON(renameSessionUrl+name, payLoad, onSuccess, onError);\n  }\n\n  React.useEffect(() => {\n    if (user) {\n      // console.log(\"fetching messages\", messages);\n      fetchSessions();\n    }\n  }, []);\n\n  const [renameMenu, setRenameMenu] = React.useState<{[key: string]: {visible: number, nameValue: string}}>({});\n  const sessionRows = sessions.map((data: IChatSession, index: number) => {\n    const isSelected = session?.id === data.id;\n    const rowClass = isSelected\n      ? \"bg-accent text-white\"\n      : \"bg-secondary text-primary\";\n    const handleRename = (event: React.ChangeEvent<HTMLInputElement>) => {\n      console.log(\"handleRename\", event.target.value);\n      setRenameMenu({...renameMenu, [data.id]: {...renameMenu[data.id], nameValue: event.target.value}});\n    }\n    const submitRename = (event: React.FormEvent<HTMLFormElement>) => {\n      const newNameValue = renameMenu[data.id]?.nameValue || '';\n      event.preventDefault();\n      console.log(\"submitRename\", newNameValue);\n      setRenameMenu({...setRenameMenu, [data.id]: 0});\n      renameSession(data, newNameValue);\n    }\n\n    let items: MenuProps[\"items\"] = [\n      {\n        label: (\n          <div\n            onClick={() => {\n              console.log(\"deleting session\");\n              deleteSession(data);\n            }}\n          >\n            <TrashIcon\n              role={\"button\"}\n              title={\"Delete\"}\n              className=\"h-4 w-4 mr-1 inline-block\"\n            />\n            Delete\n          </div>\n        ),\n        key: \"delete\",\n      },\n      {\n        label: (\n          <div\n            onClick={() => {\n              console.log(\"publishing session\");\n              publishSession();\n            }}\n          >\n            <GlobeAltIcon\n              role={\"button\"}\n              title={\"Publish\"}\n              className=\"h-4 w-4 mr-1 inline-block\"\n            />\n            Publish\n          </div>\n        ),\n        key: \"publish\",\n      },\n      {\n        label: (\n          <div\n            onClick={() => {\n              console.log(\"renaming session\");\n              setRenameMenu({...setRenameMenu, [data.id]: {...renameMenu[data.id], visible: 1}});\n            }}\n          >\n            <PencilIcon\n              role={\"button\"}\n              title={\"Rename\"}\n              className=\"h-4 w-4 mr-1 inline-block\"\n            />\n            Rename\n          </div>\n        ),\n        key: \"rename\",\n      },\n    ];\n\n    items.push();\n    const menu = (\n      <Dropdown menu={{ items }} trigger={[\"click\"]} placement=\"bottomRight\">\n        <div\n          role=\"button\"\n          className={`float-right ml-2 duration-100 hover:bg-secondary font-semibold px-2 pb-1  rounded ${\n            isSelected ? \"hover:text-accent\" : \"\"\n          }`}\n        >\n          <span className={`block -mt-2 ${isSelected ? \"text-white\" : \"\"}`}>\n            {\" \"}\n            ...\n          </span>\n        </div>\n      </Dropdown>\n    );\n\n    let displayName = data.id;\n    if (data.name != null) {\n      displayName = data.name\n    }\n    return (\n      <div\n        key={\"sessionsrow\" + index}\n        className=\"group relative  mb-2 pb-1  border-b border-dashed \"\n      >\n        {items.length > 0 && (\n          <div className=\"  absolute right-2 top-2 group-hover:opacity-100 opacity-0 \">\n            {menu}\n          </div>\n        )}\n        <div\n          className={`rounded p-2 cursor-pointer ${rowClass}`}\n          role=\"button\"\n          onClick={() => {\n            setSession(data);\n            setWorkflowConfig(data.flow_config);\n          }}\n        >\n          {(!renameMenu[data.id] || renameMenu[data.id]?.visible == 0) && (<div className=\"text-xs\">{truncateText(displayName, 20)}</div>)}\n          {(renameMenu[data.id]?.visible == 1) && (\n            <form onSubmit={submitRename}>\n              <div style={{display: 'flex', flexDirection: 'row', alignItems: 'center'}}>\n                <input id={`renameInputText-${data.id}`} type=\"text\" value={renameMenu[data.id]?.nameValue} onChange={handleRename} style={{color: 'black'}}/>\n                <button type=\"submit\"><CheckIcon role={\"button\"} className=\"h-5 w-5 ml-1 inline-block\"/></button>\n              </div>\n            </form>\n          )}\n          <div className=\"text-xs mt-1\">\n            <Square3Stack3DIcon className=\"h-4 w-4 inline-block mr-1\" />\n            {data.flow_config.name}\n          </div>\n          <div className=\"text-xs text-right \">{timeAgo(data.timestamp)}</div>\n        </div>\n      </div>\n    );\n  });\n\n  let windowHeight, skillsMaxHeight;\n  if (typeof window !== \"undefined\") {\n    windowHeight = window.innerHeight;\n    skillsMaxHeight = windowHeight - 400 + \"px\";\n  }\n\n  return (\n    <div className=\"  \">\n      <Modal\n        title={\n          <div className=\"font-semibold mb-2 pb-1 border-b\">\n            <Square3Stack3DIcon className=\"h-5 w-5 inline-block mr-1\" />\n            New Sessions{\" \"}\n          </div>\n        }\n        open={newSessionModalVisible}\n        footer={[\n          <Button\n            key=\"back\"\n            onClick={() => {\n              setNewSessionModalVisible(false);\n            }}\n          >\n            Cancel\n          </Button>,\n          <Button\n            key=\"submit\"\n            type=\"primary\"\n            disabled={!workflowConfig}\n            onClick={() => {\n              setNewSessionModalVisible(false);\n              createSession();\n            }}\n          >\n            Create\n          </Button>,\n        ]}\n      >\n        <AgentsWorkflowView />\n      </Modal>\n      <div className=\"mb-2 relative\">\n        <div className=\"\">\n          <div className=\"font-semibold mb-2 pb-1 border-b\">\n            <ChatBubbleLeftRightIcon className=\"h-5 w-5 inline-block mr-1\" />\n            Sessions{\" \"}\n          </div>\n          {sessions && sessions.length > 0 && (\n            <div className=\"text-xs  hidden mb-2 pb-1  \">\n              {\" \"}\n              Create a new session or select an existing session to view chat.\n            </div>\n          )}\n          <div\n            style={{\n              maxHeight: skillsMaxHeight,\n            }}\n            className=\"mb-4 overflow-y-auto scroll rounded relative \"\n          >\n            {sessionRows}\n            <LoadingOverlay loading={loading} />\n          </div>\n          {(!sessions || sessions.length == 0) && !loading && (\n            <div className=\"text-xs text-gray-500\">\n              No sessions found. Create a new session to get started.\n            </div>\n          )}\n        </div>\n        <div className=\"flex gap-x-2\">\n          <div className=\"flex-1\"></div>\n          <LaunchButton\n            className=\"text-sm p-2 px-3\"\n            onClick={() => {\n              if (sessions && sessions.length > 0) {\n                setWorkflowConfig(sessions[0]?.flow_config);\n              } else {\n                setWorkflowConfig(null);\n              }\n              setNewSessionModalVisible(true);\n            }}\n          >\n            {\" \"}\n            <PlusIcon className=\"w-5 h-5 inline-block mr-1\" />\n            New\n          </LaunchButton>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SessionsView;\n","import { ChevronLeftIcon, ChevronRightIcon } from \"@heroicons/react/24/outline\";\nimport * as React from \"react\";\nimport AgentsView from \"./workflows\";\nimport SessionsView from \"./sessions\";\nimport { useConfigStore } from \"../../../hooks/store\";\n\nconst SideBarView = () => {\n  const [isOpen, setIsOpen] = React.useState(true);\n  const minWidth = isOpen ? \"270px\" : \"50px\";\n\n  let windowHeight, sidebarMaxHeight;\n  if (typeof window !== \"undefined\") {\n    windowHeight = window.innerHeight;\n    sidebarMaxHeight = windowHeight - 180 + \"px\";\n  }\n\n  const workflowConfig = useConfigStore((state) => state.workflowConfig);\n\n  return (\n    <div\n      style={{\n        minWidth: minWidth,\n        maxWidth: minWidth,\n        height: \"calc(100vh - 190px)\",\n      }}\n      className=\"    \"\n    >\n      <div className=\" transition overflow-hidden duration-300  flex flex-col   h-full p-2 overflow-y-scroll scroll rounded \">\n        <div className={`${isOpen ? \"\" : \"hidden\"}  `}>\n          {/* <AgentsView /> */}\n          {<SessionsView />}\n        </div>\n      </div>\n      <div\n        onClick={() => setIsOpen(!isOpen)}\n        role=\"button\"\n        className=\" hover:text-accent duration-150  \"\n      >\n        {isOpen ? (\n          <div className=\"mt-4  \">\n            {\" \"}\n            <ChevronLeftIcon className=\"w-6 h-6  inline-block    rounded\" />{\" \"}\n            <span className=\"text-xs \"> close sidebar</span>\n          </div>\n        ) : (\n          <ChevronRightIcon className=\"w-6 h-6   inline-block   font-bold rounded \" />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SideBarView;\n","import * as React from \"react\";\nimport { IChatSession, IMessage, IStatus } from \"../../types\";\nimport { fetchJSON, getServerUrl, setLocalStorage } from \"../../utils\";\nimport ChatBox from \"./chatbox\";\nimport { appContext } from \"../../../hooks/provider\";\nimport { message } from \"antd\";\nimport SideBarView from \"./sidebar\";\nimport { useConfigStore } from \"../../../hooks/store\";\nimport SessionsView from \"./sessions\";\nimport AgentsWorkflowView from \"./workflows\";\nimport { Square3Stack3DIcon } from \"@heroicons/react/24/outline\";\nimport Icon from \"../../icons\";\n\nconst RAView = () => {\n  const session: IChatSession | null = useConfigStore((state) => state.session);\n  const [loading, setLoading] = React.useState(false);\n  const [messages, setMessages] = React.useState<IMessage[] | null>(null);\n  const [skillUpdated, setSkillUpdated] = React.useState(\"default\");\n\n  const skillup = {\n    get: skillUpdated,\n    set: setSkillUpdated,\n  };\n\n  const [config, setConfig] = React.useState(null);\n  const connectionId = useConfigStore((state) => state.connectionId);\n\n  React.useEffect(() => {\n    setLocalStorage(\"ara_config\", config);\n  }, [config]);\n\n  const [error, setError] = React.useState<IStatus | null>({\n    status: true,\n    message: \"All good\",\n  });\n\n  const { user } = React.useContext(appContext);\n  const serverUrl = getServerUrl();\n  const fetchMessagesUrl = `${serverUrl}/messages?user_id=${user?.email}&session_id=${session?.id}`;\n  const workflowConfig = useConfigStore((state) => state.workflowConfig);\n\n  const fetchMessages = () => {\n    setError(null);\n    setLoading(true);\n    setMessages(null);\n    // const fetch;\n    const payLoad = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    // console.log(\"payload\", payLoad);\n    const onSuccess = (data: any) => {\n      // console.log(data);\n      if (data && data.status) {\n        setMessages(data.data);\n        // message.success(data.message);\n      } else {\n        message.error(data.message);\n      }\n      setLoading(false);\n    };\n    const onError = (err: any) => {\n      setError(err);\n      message.error(err.message);\n      setLoading(false);\n    };\n    fetchJSON(fetchMessagesUrl, payLoad, onSuccess, onError);\n  };\n\n  React.useEffect(() => {\n    if (user && session) {\n      // console.log(\"fetching messages\", messages);\n      fetchMessages();\n    }\n  }, [session]);\n\n  return (\n    <div className=\"h-full   \">\n      <div className=\"flex h-full   \">\n        <div className=\"  mr-2  rounded\">\n          <SideBarView />\n        </div>\n        <div className=\" flex-1  \">\n          {!session && (\n            <div className=\" w-full  h-full flex items-center justify-center\">\n              {/* {JSON.stringify(workflowConfig)} */}\n              <div className=\"w-2/3\" id=\"middle\">\n                <div className=\"w-full   text-center\">\n                  {\" \"}\n                  <img\n                    src=\"/images/svgs/welcome.svg\"\n                    alt=\"welcome\"\n                    className=\"text-accent inline-block object-cover w-56\"\n                  />\n                </div>\n                <SessionsView />\n              </div>\n            </div>\n          )}\n\n          {workflowConfig !== null && session !== null && (\n            <ChatBox initMessages={messages} connectionId={connectionId} />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default RAView;\n","import * as React from \"react\";\nimport Layout from \"../components/layout\";\nimport { graphql } from \"gatsby\";\nimport RAView from \"../components/views/playground/ra\";\n\n// markup\nconst IndexPage = ({ data }: any) => {\n  return (\n    <Layout meta={data.site.siteMetadata} title=\"Home\" link={\"/\"}>\n      <main style={{ height: \"100%\" }} className=\" h-full \">\n        <RAView />\n      </main>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query HomePageQuery {\n    site {\n      siteMetadata {\n        description\n        title\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n","import * as React from \"react\";\nfunction Square3Stack3DIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M6.429 9.75 2.25 12l4.179 2.25m0-4.5 5.571 3 5.571-3m-11.142 0L2.25 7.5 12 2.25l9.75 5.25-4.179 2.25m0 0L21.75 12l-4.179 2.25m0 0 4.179 2.25L12 21.75 2.25 16.5l4.179-2.25m11.142 0-5.571 3-5.571-3\"\n  }));\n}\nconst ForwardRef = React.forwardRef(Square3Stack3DIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction TrashIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0\"\n  }));\n}\nconst ForwardRef = React.forwardRef(TrashIcon);\nexport default ForwardRef;"],"names":["title","titleId","props","svgRef","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","AgentsWorkflowView","error","setError","React","status","message","loading","setLoading","setWorkflowConfig","useConfigStore","state","workflowConfig","user","appContext","listWorkflowsUrl","getServerUrl","email","workflowConfigs","setWorkflowConfigs","selectedConfig","setSelectedConfig","fetchJSON","method","headers","data","length","err","className","LoadingOverlay","Select","value","name","onChange","options","map","config","index","label","Link","to","_ref","serverUrl","listSessionUrl","createSessionUrl","renameSessionUrl","publishSessionUrl","deleteSessionUrl","sessions","setSessions","session","setSession","newSessionModalVisible","setNewSessionModalVisible","firstSession","flow_config","renameMenu","setRenameMenu","sessionRows","_renameMenu$data$id2","_renameMenu$data$id3","_renameMenu$data$id4","isSelected","rowClass","items","onClick","console","log","payLoad","body","JSON","stringify","user_id","success","deleteSession","TrashIcon","role","key","publishSession","tags","GlobeAltIcon","_objectSpread","visible","PencilIcon","push","menu","Dropdown","trigger","placement","displayName","truncateText","onSubmit","event","_renameMenu$data$id","newNameValue","nameValue","preventDefault","renameSession","_data$data$2","workflow_config","style","display","flexDirection","alignItems","type","target","color","CheckIcon","Square3Stack3DIcon","timeAgo","timestamp","windowHeight","skillsMaxHeight","window","innerHeight","Modal","open","footer","Button","disabled","createSession","session_id","_data$data$","ChatBubbleLeftRightIcon","maxHeight","LaunchButton","_sessions$","PlusIcon","SideBarView","isOpen","setIsOpen","minWidth","sidebarMaxHeight","maxWidth","height","SessionsView","ChevronLeftIcon","ChevronRightIcon","RAView","messages","setMessages","skillUpdated","setSkillUpdated","setConfig","connectionId","setLocalStorage","fetchMessagesUrl","src","alt","ChatBox","initMessages","Layout","meta","site","siteMetadata","link","ForwardRef"],"sourceRoot":""}